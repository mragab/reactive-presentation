/ hide slides on %conceal, %notitle and named "!"
- titleless = (title = self.title) == '!'
- hide_title = (titleless || (option? :notitle) || (option? :conceal))
- vertical_slides = find_by(context: :section) {|section| section.level == 2 }

/ render parent section of vertical slides set
- if @level == 1 && !vertical_slides.empty?
  section
    section id=(titleless ? nil : @id) data-transition=(attr 'data-transition') data-transition-speed=(attr 'data-transition-speed') data-background=(attr 'data-background') data-background-size=(attr 'data-background-size') data-background-repeat=(attr 'data-background-repeat') data-background-transition=(attr 'data-background-transition')
      - unless hide_title
        h2=title
      - (blocks - vertical_slides).each do |block|
        =block.convert
    - vertical_slides.each do |subsection|
      =subsection.convert

/ render standalone slides (or vertical slide subsection)
- else
  - if @level >= 3
    / dynamic tags which maps <hX> with level
    *{tag: %(h#{@level})} =title
    =content.chomp
  - else
    section id=(titleless ? nil : @id) data-transition=(attr 'data-transition') data-transition-speed=(attr 'data-transition-speed') data-background=(attr 'data-background') data-background-size=(attr 'data-background-size') data-background-repeat=(attr 'data-background-repeat') data-background-transition=(attr 'data-background-transition')
      - unless hide_title
        h2=title
      =content.chomp
